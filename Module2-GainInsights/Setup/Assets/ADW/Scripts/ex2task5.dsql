-- Create a stored procedure to generate a new summary table using the same SELECT statement executed on the external table in the previous steps
IF EXISTS(SELECT * FROM sys.procedures WHERE name = 'asp_populate_productlogsummary')
DROP PROCEDURE adw.asp_populate_productlogsummary
GO

CREATE PROCEDURE adw.asp_populate_productlogsummary AS
	BEGIN
		IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_SCHEMA = 'adw' AND TABLE_NAME = 'ProductLogSummary')
		DROP TABLE adw.ProductLogSummary;
	CREATE TABLE adw.ProductLogSummary 
	WITH
	(   
	    CLUSTERED COLUMNSTORE INDEX,
	    DISTRIBUTION = ROUND_ROBIN
	)
AS
	SELECT
		LogDate,
		Category,
		Title,
		SUM(CASE WHEN prodtype = 'view' THEN TotalClicked ELSE 0 END) AS ProdViews,
		SUM(CASE WHEN prodtype = 'add' THEN TotalClicked ELSE 0 END) AS ProdAdds
	FROM adw.FactProductLog 
	GROUP BY LogDate, Title, Category
	
	CREATE STATISTICS Stat_adw_ProductLogSummary_LogDate on adw.ProductLogSummary(LogDate);
	CREATE STATISTICS Stat_adw_ProductLogSummary_category on adw.ProductLogSummary(Category);
	CREATE STATISTICS Stat_adw_ProductLogSummary_title on adw.ProductLogSummary(Title);
	CREATE STATISTICS Stat_adw_ProductLogSummary_prodviews on adw.ProductLogSummary(ProdViews);
	CREATE STATISTICS Stat_adw_ProductLogSummary_prodadds on adw.ProductLogSummary(ProdAdds);
	END
GO


EXEC adw.asp_populate_productlogsummary; 
GO

SELECT * FROM adw.ProductLogSummary;